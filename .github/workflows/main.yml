name: Conan + Trivy Full SBOM Scan

on:
  workflow_dispatch:
    inputs:
      src_repository:
        description: 'Source Repository (e.g., user/repo)'
        required: true
      src_branch:
        description: 'Branch of source repository'
        required: false
        default: 'main'
      conan_repository:
        description: 'Repository containing conanfile.py'
        required: true
      conan_branch:
        description: 'Branch for Conan repository'
        required: false
        default: 'main'
      src_type:
        description: 'Project Type (java, python, dotnet, cpp, c++)'
        required: false
        default: 'cpp'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      # Setup environment
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Checkout repositories
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.src_repository }}
          ref: ${{ inputs.src_branch }}
          path: project-src

      - name: Checkout Conan repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.conan_repository }}
          ref: ${{ inputs.conan_branch }}
          path: conan-src

      # Install dependencies
      - name: Install Conan and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install conan
          conan profile detect --force

      # Generate Conan lockfile
      - name: Generate Conan lockfile
        run: |
          conan lock create conanfile.py --lockfile-out=conan.lock
        working-directory: conan-src

      # Copy lockfile to source directory for scanning
      - name: Copy Conan lockfile to source directory
        run: cp conan-src/conan.lock project-src/conan.lock

      # Generate SBOM and vulnerability scan with Trivy
      - name: Run Trivy SBOM generation and vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          input: './project-src'
          format: cyclonedx
          scanners: vuln
          output: project-src/trivy-report.json
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH,MEDIUM

      # Sanitize artifact name (replace / with _)
      - name: Sanitize artifact name
        id: sanitize
        run: |
          SAFE_NAME="${{ inputs.src_repository }}"
          SAFE_NAME="${SAFE_NAME//\//_}"
          echo "name=$SAFE_NAME" >> $GITHUB_OUTPUT

      # Upload Trivy report artifact
      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-${{ steps.sanitize.outputs.name }}
          path: project-src/trivy-report.json
          if-no-files-found: w
