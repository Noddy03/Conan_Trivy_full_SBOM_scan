name: cdxgen conan test

on:
  workflow_dispatch:
    inputs:
      src_repository:
        description: 'Source Repository (e.g., user/repo)'
        required: true
        default: ''
      src_branch:
        description: 'Branch of source repository'
        required: false
        default: ''
      conan_repository:
        description: 'Conan Repository with conanfile.py'
        required: true
        default: ''
      conan_branch:
        description: 'Branch for Conan repository'
        required: false
        default: 'main'
      src_type:
        description: 'Project Type (java, python, dotnet, cpp, c++)'
        required: false
        default: 'cpp'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.src_repository }}
          ref: ${{ inputs.src_branch }}
          path: project-src

      - name: Checkout Conan repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.conan_repository }}
          ref: ${{ inputs.conan_branch }}
          path: conan-src

      - name: Install dependencies (Conan, cyclonedx-python-lib, cdxgen)
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install conan cyclonedx-python-lib
          npm install -g @cyclonedx/cdxgen

      - name: Detect Conan profile
        run: conan profile detect --force

      - name: Debug list conanfile.py in conan-src
        run: find conan-src -name "conanfile.py"

      - name: Generate Conan lockfile
        run: |
          set -e
          conan lock create conanfile.py --lockfile-out=conan.lock
        working-directory: conan-src

      - name: Debug list generated lockfile
        run: ls -l conan-src/conan.lock

      - name: Debug list conanfile.py in project-src
        run: find project-src -name "conanfile.py"

      - name: Debug list project-src contents
        run: ls -al project-src

      - name: Check cdxgen version
        run: cdxgen --version

      - name: Generate SBOM with cdxgen
        run: |
          if [ "${{ inputs.src_type }}" == "cpp" ]; then
            echo "Running cdxgen with explicit Conan lockfile..."
            cdxgen -t cpp -o sbom.json --lockfile ../conan-src/conan.lock .
          else
            echo "Unsupported src_type: ${{ inputs.src_type }}"
            exit 1
          fi
        working-directory: project-src

      - name: Verify SBOM file exists
        run: ls -l project-src/sbom.json

      - name: Scan SBOM with Trivy
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/project-src":/app:rw \
            -t aquasec/trivy:latest sbom \
            --format "cyclonedx" \
            --scanners vuln,license \
            --output /app/trivy-report-cdxgen-src.json \
            /app/sbom.json

      - name: Prepare artifact name
        id: artifactname
        run: |
          out_name="${{ inputs.src_repository }}"
          out_name="${out_name//\//-}"
          echo "out_name=$out_name" >> $GITHUB_OUTPUT

      - name: Upload SBOM and Trivy scan results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifactname.outputs.out_name }}
          path: |
            project-src/sbom.json
            project-src/trivy-report-cdxgen-src.json
          if-no-files-found: warn
