name: Conan + Trivy Full SBOM Scan

on:
  workflow_dispatch:
    inputs:
      src_repository:
        description: 'Source Repository (e.g., user/repo)'
        required: true
      src_branch:
        description: 'Branch of source repository'
        required: false
        default: 'main'
      conan_repository:
        description: 'Repository containing conanfile.py'
        required: true
      conan_branch:
        description: 'Branch for Conan repository'
        required: false
        default: 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      # -----------------------------
      # SETUP
      # -----------------------------
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # -----------------------------
      # CHECKOUT REPOSITORIES
      # -----------------------------
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.src_repository }}
          ref: ${{ inputs.src_branch }}
          path: project-src

      - name: Checkout Conan repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.conan_repository }}
          ref: ${{ inputs.conan_branch }}
          path: conan-src

      # -----------------------------
      # INSTALL DEPENDENCIES
      # -----------------------------
      - name: Install Conan and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install conan
          conan profile detect --force

      - name: Generate Conan lockfile
        run: |
          conan lock create conanfile.py --lockfile-out=conan.lock
        working-directory: conan-src

      - name: Copy Conan lockfile
        run: cp conan-src/conan.lock project-src/conan.lock

      # -----------------------------
      # TRIVY SCAN BOTH REPOS
      # -----------------------------
      - name: Run Trivy scan on source repo
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          input: './project-src'
          format: cyclonedx
          scanners: vuln
          output: project-src/trivy-src.json
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH,MEDIUM

      - name: Run Trivy scan on Conan repo
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          input: './conan-src'
          format: cyclonedx
          scanners: vuln
          output: conan-src/trivy-conan.json
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH,MEDIUM

      # -----------------------------
      # MERGE BOTH SBOMS
      # -----------------------------
      - name: Merge Trivy SBOMs
        run: |
          cat > merge_sbom.py <<'EOF'
          import json, sys

          def merge_sboms(paths, out):
              merged = {"bomFormat": "CycloneDX", "specVersion": "1.5", "components": []}
              for p in paths:
                  try:
                      with open(p, "r") as f:
                          sbom = json.load(f)
                          merged["components"].extend(sbom.get("components", []))
                  except Exception as e:
                      print(f"Warning: could not load {p}: {e}")
              # Deduplicate components by name+version
              unique = {(c.get("name"), c.get("version")): c for c in merged["components"]}
              merged["components"] = list(unique.values())
              with open(out, "w") as f:
                  json.dump(merged, f, indent=2)

          if __name__ == "__main__":
              merge_sboms(sys.argv[1:-1], sys.argv[-1])
          EOF

          python merge_sbom.py project-src/trivy-src.json conan-src/trivy-conan.json project-src/trivy-merged.json

      # -----------------------------
      # GENERATE SARIF REPORT
      # -----------------------------
      - name: Generate SARIF report
        run: |
          trivy fs --scanners vuln --format sarif -o project-src/trivy-results.sarif ./project-src ./conan-src

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: project-src/trivy-results.sarif

      # -----------------------------
      # SANITIZE NAME + UPLOAD ARTIFACTS
      # -----------------------------
      - name: Sanitize artifact name
        id: sanitize
        run: |
          SAFE_NAME="${{ inputs.src_repository }}"
          SAFE_NAME="${SAFE_NAME//\//_}"
          echo "name=$SAFE_NAME" >> $GITHUB_OUTPUT

      - name: Upload merged SBOM
        uses: actions/upload-artifact@v4
        with:
          name: trivy-merged-sbom-${{ steps.sanitize.outputs.name }}
          path: project-src/trivy-merged.json
          if-no-files-found: warn

      - name: Upload SARIF report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-sarif-${{ steps.sanitize.outputs.name }}
          path: project-src/trivy-results.sarif
          if-no-files-found: warn

