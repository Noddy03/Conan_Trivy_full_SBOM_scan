//Marco Barozzi 167018
#include <iostream>
#include <string>
#include <map>
#include <list>
#include <vector>
#include <algorithm>
#include <random>
#include <ctime>
using namespace std;

int randomNumber(){
	int min = 0, max = 9;
	return rand()%(max-min+1)+min;
}
void initVet1(vector<int>& vec){
	//con funzione 
	generate (vec.begin(), vec.end(), randomNumber);
}
void initVet2(vector<int>& vec){
	//con espressione lambda
	int min = 0, max = 9;
	generate(vec.begin(), vec.end(), [min, max](){return (rand()%(max-min+1)+min);});
}
void initVet3(vector<int>& vec){
	//init iota e poi shuffle
	iota(vec.begin(), vec.end(), 0);
	shuffle(vec.begin(), vec.end(), default_random_engine());
}

int main(int argc, char** argv) {
	srand(time(0));
	//init list
	list<int> l = {1,2,3,4,5,6,7,8,9};
	
	vector<int> v(10);
	//init vector modo 1
	initVet3(v);
	for(const& item : v){
		cout << "["<<item<<"]";
	}
	cout << endl;

	//init vector modo 2
    random_device rd;  // a seed source for the random number engine
    mt19937 gen(rd()); // mersenne_twister_engine seeded with rd()
    uniform_int_distribution<> distrib(1, 6);
    // Use distrib to transform the random unsigned int
    // generated by gen into an int in [1, 6]
    for (int n = 0; n<10; ++n){
    	v[n] = distrib(gen);
	}
        
	for(const& item : v){
		cout << "["<<item<<"]";
	}
	cout << endl;
	
	
	return 0;
}

